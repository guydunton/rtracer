name: Rust

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Update dependencies
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo apt update -y
          sudo apt install -y libxkbcommon-dev

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose

  rustfmt:
    name: Check formatting using rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Update dependencies
        run: |
          sudo apt update -y
          sudo apt install -y libxkbcommon-dev
      - uses: actions/checkout@v1
      - run: rustup component add rustfmt
      - run: cargo fmt -- --check

  clippy:
    name: Lint using Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Update dependencies
        run: |
          sudo apt update -y
          sudo apt install -y libxkbcommon-dev
      - uses: actions/checkout@v1
      - run: rustup component add clippy
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
